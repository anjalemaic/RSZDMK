In archive libtimer0_driver.a:

timer0.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         000003fc  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00000700  00000000  00000000  00000430  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .bss.ms       00000004  00000000  00000000  00000b30  2**0
                  ALLOC
  6 .text.timer0DelayMs 0000008c  00000000  00000000  00000b30  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.timer0InteruptInit 00000030  00000000  00000000  00000bbc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text.__vector_14 00000056  00000000  00000000  00000bec  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.timer0DelayMs:

00000000 <timer0DelayMs>:
/// Promenljiva koja skladisti broj milisekundi proteklih od pokretanja aplikacije
volatile unsigned long ms = 0;

/******************************************************************************************/
unsigned long timer0DelayMs(unsigned long delay_length)
{
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	28 97       	sbiw	r28, 0x08	; 8
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	de bf       	out	0x3e, r29	; 62
  10:	0f be       	out	0x3f, r0	; 63
  12:	cd bf       	out	0x3d, r28	; 61
  14:	6d 83       	std	Y+5, r22	; 0x05
  16:	7e 83       	std	Y+6, r23	; 0x06
  18:	8f 83       	std	Y+7, r24	; 0x07
  1a:	98 87       	std	Y+8, r25	; 0x08
	unsigned long t0; // Trenutak pocevsi od kog se racuna pauza
	// Implementacija pauze
	t0 = ms;
  1c:	80 91 00 00 	lds	r24, 0x0000
  20:	90 91 00 00 	lds	r25, 0x0000
  24:	a0 91 00 00 	lds	r26, 0x0000
  28:	b0 91 00 00 	lds	r27, 0x0000
  2c:	89 83       	std	Y+1, r24	; 0x01
  2e:	9a 83       	std	Y+2, r25	; 0x02
  30:	ab 83       	std	Y+3, r26	; 0x03
  32:	bc 83       	std	Y+4, r27	; 0x04
	while ((ms - t0) < delay_length)
  34:	20 91 00 00 	lds	r18, 0x0000
  38:	30 91 00 00 	lds	r19, 0x0000
  3c:	40 91 00 00 	lds	r20, 0x0000
  40:	50 91 00 00 	lds	r21, 0x0000
  44:	89 81       	ldd	r24, Y+1	; 0x01
  46:	9a 81       	ldd	r25, Y+2	; 0x02
  48:	ab 81       	ldd	r26, Y+3	; 0x03
  4a:	bc 81       	ldd	r27, Y+4	; 0x04
  4c:	28 1b       	sub	r18, r24
  4e:	39 0b       	sbc	r19, r25
  50:	4a 0b       	sbc	r20, r26
  52:	5b 0b       	sbc	r21, r27
  54:	8d 81       	ldd	r24, Y+5	; 0x05
  56:	9e 81       	ldd	r25, Y+6	; 0x06
  58:	af 81       	ldd	r26, Y+7	; 0x07
  5a:	b8 85       	ldd	r27, Y+8	; 0x08
  5c:	28 17       	cp	r18, r24
  5e:	39 07       	cpc	r19, r25
  60:	4a 07       	cpc	r20, r26
  62:	5b 07       	cpc	r21, r27
  64:	00 f0       	brcs	.+0      	; 0x66 <timer0DelayMs+0x66>
		; // Pauza delay_length milisekundi
	return ms;
  66:	80 91 00 00 	lds	r24, 0x0000
  6a:	90 91 00 00 	lds	r25, 0x0000
  6e:	a0 91 00 00 	lds	r26, 0x0000
  72:	b0 91 00 00 	lds	r27, 0x0000
}
  76:	bc 01       	movw	r22, r24
  78:	cd 01       	movw	r24, r26
  7a:	28 96       	adiw	r28, 0x08	; 8
  7c:	0f b6       	in	r0, 0x3f	; 63
  7e:	f8 94       	cli
  80:	de bf       	out	0x3e, r29	; 62
  82:	0f be       	out	0x3f, r0	; 63
  84:	cd bf       	out	0x3d, r28	; 61
  86:	cf 91       	pop	r28
  88:	df 91       	pop	r29
  8a:	08 95       	ret

Disassembly of section .text.timer0InteruptInit:

00000000 <timer0InteruptInit>:
/// Promenljiva koja skladisti broj milisekundi proteklih od pokretanja aplikacije
volatile unsigned long ms = 0;

/******************************************************************************************/
unsigned long timer0DelayMs(unsigned long delay_length)
{
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	e4 e4       	ldi	r30, 0x44	; 68
   a:	f0 e0       	ldi	r31, 0x00	; 0
   c:	82 e0       	ldi	r24, 0x02	; 2
   e:	80 83       	st	Z, r24
  10:	e5 e4       	ldi	r30, 0x45	; 69
  12:	f0 e0       	ldi	r31, 0x00	; 0
  14:	83 e0       	ldi	r24, 0x03	; 3
  16:	80 83       	st	Z, r24
  18:	e7 e4       	ldi	r30, 0x47	; 71
  1a:	f0 e0       	ldi	r31, 0x00	; 0
	unsigned long t0; // Trenutak pocevsi od kog se racuna pauza
	// Implementacija pauze
	t0 = ms;
  1c:	89 ef       	ldi	r24, 0xF9	; 249
  1e:	80 83       	st	Z, r24
  20:	ee e6       	ldi	r30, 0x6E	; 110
  22:	f0 e0       	ldi	r31, 0x00	; 0
  24:	82 e0       	ldi	r24, 0x02	; 2
  26:	80 83       	st	Z, r24
  28:	78 94       	sei
  2a:	cf 91       	pop	r28
  2c:	df 91       	pop	r29
  2e:	08 95       	ret

Disassembly of section .text.__vector_14:

00000000 <__vector_14>:
/// Promenljiva koja skladisti broj milisekundi proteklih od pokretanja aplikacije
volatile unsigned long ms = 0;

/******************************************************************************************/
unsigned long timer0DelayMs(unsigned long delay_length)
{
   0:	1f 92       	push	r1
   2:	0f 92       	push	r0
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	0f 92       	push	r0
   8:	11 24       	eor	r1, r1
   a:	8f 93       	push	r24
   c:	9f 93       	push	r25
   e:	af 93       	push	r26
  10:	bf 93       	push	r27
  12:	df 93       	push	r29
  14:	cf 93       	push	r28
  16:	cd b7       	in	r28, 0x3d	; 61
  18:	de b7       	in	r29, 0x3e	; 62
  1a:	80 91 00 00 	lds	r24, 0x0000
	unsigned long t0; // Trenutak pocevsi od kog se racuna pauza
	// Implementacija pauze
	t0 = ms;
  1e:	90 91 00 00 	lds	r25, 0x0000
  22:	a0 91 00 00 	lds	r26, 0x0000
  26:	b0 91 00 00 	lds	r27, 0x0000
  2a:	01 96       	adiw	r24, 0x01	; 1
  2c:	a1 1d       	adc	r26, r1
  2e:	b1 1d       	adc	r27, r1
  30:	80 93 00 00 	sts	0x0000, r24
	while ((ms - t0) < delay_length)
  34:	90 93 00 00 	sts	0x0000, r25
  38:	a0 93 00 00 	sts	0x0000, r26
  3c:	b0 93 00 00 	sts	0x0000, r27
  40:	cf 91       	pop	r28
  42:	df 91       	pop	r29
  44:	bf 91       	pop	r27
  46:	af 91       	pop	r26
  48:	9f 91       	pop	r25
  4a:	8f 91       	pop	r24
  4c:	0f 90       	pop	r0
  4e:	0f be       	out	0x3f, r0	; 63
  50:	0f 90       	pop	r0
  52:	1f 90       	pop	r1
  54:	18 95       	reti
